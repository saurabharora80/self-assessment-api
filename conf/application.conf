# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = self-assessment-api

appUrl = "http://self-assessment-api.service"

play.modules.enabled += "uk.gov.hmrc.play.graphite.GraphiteMetricsModule2"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = uk.gov.hmrc.selfassessmentapi.config.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes

play.crypto.secret = "cchq^^yGDb?0TfYHR7;TBPOBDFsuQkFD2k7HSRkGCIe3smErl[DMhG:S03Gm=2fc"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  authorisation {
    ni = {
      patterns = [
        "/ni/:nino/self-employments",
        "/ni/:nino/self-employments/:id",
        "/ni/:nino/self-employments/:id/obligations",
        "/ni/:nino/self-employments/:id/periods",
        "/ni/:nino/self-employments/:id/periods/:periodId",
        "/ni/:nino/self-employments/:id/:taxYear",
        
        "/ni/:nino/uk-properties",
        "/ni/:nino/uk-properties/obligations",
        "/ni/:nino/uk-properties/:id/periods",
        "/ni/:nino/uk-properties/:id/periods/:periodId",
        "/ni/:nino/uk-properties/:id/:taxYear",
        
        "/ni/:nino/savings-accounts",
        "/ni/:nino/savings-accounts/:id",
        "/ni/:nino/savings-accounts/:id/:taxYear",
        
        "/ni/:nino/dividends/:taxYear",
        
        "/ni/:nino/calculations",
        "/ni/:nino/calculations/:id"
      ]
      predicates = [{
        enrolment = "HMRC-NI"
        identifiers = [{ key = "NINO", value = "$nino" }]
      }]
    }
  }

  com.kenshoo.play.metrics.MetricsController = {
    authorisedBy = []
    needsHeaderValidation = false
    needsLogging = false
    needsAuditing = false
    needsTaxYear = false
  }

  uk.gov.hmrc.play.health.AdminController = {
    authorisedBy = []
    needsHeaderValidation = false
    needsLogging = false
    needsAuditing = false
    needsTaxYear = false
  }

  uk.gov.hmrc.selfassessmentapi.controllers.definition.DocumentationController = {
    authorisedBy = []
    needsHeaderValidation = false
    needsLogging = false
    needsAuditing = false
    needsTaxYear = false
  }

  uk.gov.hmrc.selfassessmentapi.resources.SelfEmploymentsResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.SelfEmploymentPeriodResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.SelfEmploymentAnnualSummaryResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.SelfEmploymentObligationsResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.PropertiesResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.PropertiesPeriodResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.PropertiesAnnualSummaryResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.PropertiesObligationsResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.DividendsAnnualSummaryResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.BanksResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.BanksAnnualSummaryResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }

  uk.gov.hmrc.selfassessmentapi.resources.TaxCalculationResource = {
    authorisedBy = ["ni"]
    needsLogging = true
    needsAuditing = true
  }
}


wiremock-port = 22222
wiremock-port = ${?WIREMOCK_PORT}

mongo-test-uri = "mongodb://localhost:12345/self-assessment-api"
mongo-test-uri = ${?MONGO_TEST_URI}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

# The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
api.gateway.context = "self-assessment"

# The status of the API for the API Platform.
api.status = "PROTOTYPED"

# Custom header whitelisting
httpHeadersWhitelist = ["Gov-Test-Scenario"]

# Microservice specific config

Dev {

  auditing {
    enabled = true
    traceRequests = false

    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  mongodb {
    uri = "mongodb://localhost:27017/self-assessment-api"
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {

      auth {
        host = localhost
        port = 8500
      }

      datastream {
        host = localhost
        port = 8100
        enabled = false
      }

      service-locator {
        host = localhost
        port = 9602
        enabled = false
      }

      des {
        host = localhost
        port = 9668
        env = none
        token = secret
      }
    }
  }

  feature-switch {
    white-list {
      enabled = false
      applicationIds = []
    }

    test-scenario-simulation {
      enabled = true
    }
  }

  scheduling {
    deleteExpiredDataJob {
      enabled = true
      initialDelay = "0 second"
      startAt = "03:00"
      interval = "1 day"
      timeToLiveInHours = 12
    }
  }

}

Test {
  auditing {
    enabled = true
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = ${wiremock-port}
      }
    }
  }


  mongodb {
    uri = ${mongo-test-uri}
  }

  microservice {
    services {

      datastream {
        host = "localhost"
        port = ${wiremock-port}
        enabled = false
      }

      auth {
        host = "localhost"
        port = ${wiremock-port}
      }

      service-locator {
        host = "localhost"
        port = ${wiremock-port}
        enabled = false
      }

      des {
        host = "localhost"
        port = ${wiremock-port}
        env = ""
        token = ""
      }
    }
  }

  feature-switch {
    white-list {
      enabled = false
      applicationIds = []
    }

    test-scenario-simulation {
      enabled = true
    }
  }
  
  scheduling {
    deleteExpiredDataJob {
      enabled = true
      initialDelay = "5 minutes"
      startAt = "03:00"
      interval = "1 day"
      timeToLiveInHours = 12
    }
  }

}
